{"version":3,"sources":["Components/sprite.svg","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactsList/ContactListItem.jsx","Components/ContactsList/ContactsList.jsx","App.js","index.js","Components/ContactForm/ContactForm.module.scss","Components/ContactsList/ContactsList.module.scss","Components/Filter/Filter.module.scss"],"names":["ContactForm","onSubmit","onCheckUnique","useState","name","setName","number","setNumber","className","styles","form","e","console","log","sprite","preventDefault","newContact","id","uuidv4","label","inputName","onChange","target","value","type","pattern","title","required","inputNumber","button","iconAdd","href","Filter","onChangeFilter","text","wrapper","iconSearch","input","ContactListItem","onRemove","contact","textContact","btnDelete","onClick","iconRemove","ContactsList","contacts","length","map","App","setContacts","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filter","setFilter","getVisibleContacts","toLowerCase","includes","find","alert","currentTarget","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.696a7456.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprite.f982997a.svg\";","import styles from './ContactForm.module.scss';\nimport sprite from '../sprite.svg';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nconst ContactForm = ({ onSubmit, onCheckUnique }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    console.log(sprite);\n    e.preventDefault();\n    const newContact = { id: uuidv4(), name, number };\n    onCheckUnique(name);\n    onSubmit(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  const handleInputName = e => {\n    setName(e.target.value);\n  };\n\n  const handleInputNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  return (\n    <>\n      <form\n        className={styles.form}\n        onSubmit={handleSubmit}\n        // onCheckUnique={handleSubmit}\n      >\n        <label className={styles.label}>\n          <span>Name</span>\n          <input\n            className={styles.inputName}\n            onChange={handleInputName}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.inputNumber}\n            onChange={handleInputNumber}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact{' '}\n          <svg className={styles.iconAdd}>\n            <use href={`${sprite}#icon-add`}></use>\n          </svg>\n        </button>\n      </form>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCheckUnique: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styles from './Filter.module.scss';\nimport sprite from '../sprite.svg';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onChangeFilter }) => (\n  <label className={styles.label}>\n    <span className={styles.text}>Find contacts by name</span>\n\n    <div className={styles.wrapper}>\n      <svg className={styles.iconSearch}>\n        <use href={`${sprite}#icon-search`}></use>\n      </svg>{' '}\n      <input className={styles.input} onChange={onChangeFilter} type=\"text\" />\n    </div>\n  </label>\n);\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './ContactsList.module.scss';\nimport sprite from '../sprite.svg';\n\nconst ContactListItem = ({ name, number, onRemove }) => (\n  <li className={styles.contact}>\n    <span className={styles.textContact}>\n      {name} : {number}\n    </span>\n    <button className={styles.btnDelete} onClick={onRemove}>\n      Delete\n      <svg className={styles.iconRemove}>\n        <use href={`${sprite}#icon-remove`}></use>\n      </svg>\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import styles from './ContactsList.module.scss';\nimport PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\n\nconst ContactsList = ({ contacts, onRemove }) =>\n  contacts.length > 0 && (\n    <>\n      <ul className={styles.contacts}>\n        {contacts.map(({ name, number, id }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onRemove={() => onRemove(id)}\n          />\n        ))}\n      </ul>\n    </>\n  );\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter/';\nimport { useState, useEffect } from 'react';\nimport ContactsList from './Components/ContactsList';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    console.log(contacts);\n    console.log(parsedContacts);\n    console.log('Did Mount');\n    if (parsedContacts) {\n      setContacts([...parsedContacts]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  });\n\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = newContact => {\n    setContacts(() => [...contacts, newContact]);\n  };\n\n  const checkUniqueContactHandler = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    !!isExistContact && alert(`${name} is alredy in contacts`);\n  };\n\n  const filterChangeHandler = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const contactRemoveHandler = id =>\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n\n  const getVisibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm\n        onSubmit={formSubmitHandler}\n        onCheckUnique={checkUniqueContactHandler}\n      />\n      <h2>Contacts</h2>\n      <Filter onChangeFilter={filterChangeHandler} />\n\n      <ContactsList\n        contacts={getVisibleContacts}\n        onRemove={contactRemoveHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './basic.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1PnRx\",\"button\":\"ContactForm_button__3s9hl\",\"label\":\"ContactForm_label__2HF-o\",\"inputNumber\":\"ContactForm_inputNumber__3jcwR\",\"inputName\":\"ContactForm_inputName__2vh1z\",\"iconAdd\":\"ContactForm_iconAdd__1pw5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactsList_btnDelete__3Myth\",\"contacts\":\"ContactsList_contacts__3sIQ9\",\"contact\":\"ContactsList_contact__1chyH\",\"textContact\":\"ContactsList_textContact__3EqdL\",\"iconRemove\":\"ContactsList_iconRemove__35XGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2meeX\",\"label\":\"Filter_label__2AAwu\",\"input\":\"Filter_input__fLbC_\",\"text\":\"Filter_text__WeQD7\",\"filter\":\"Filter_filter__1pGQz\",\"iconSearch\":\"Filter_iconSearch__hsMrT\"};"],"sourceRoot":""}